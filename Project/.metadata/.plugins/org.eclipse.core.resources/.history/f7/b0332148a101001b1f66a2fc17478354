<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.polarising.com/common/envelope/1.0"
	 xmlns:xs="http://www.w3.org/2001/XMLSchema"
	 targetNamespace="http://www.polarising.com/common/envelope/1.0"
	 version="1.0"
	 elementFormDefault="qualified"
	 attributeFormDefault="unqualified">

	


	<!-- Elements -->
	<xs:element name="envelope">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="header"/>
				<xs:element ref="body" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="header" type="Header"/>
	<xs:element name="body" type="Body"/>
	<xs:element name="result" type="Result"/>
	

	

	
	<!-- Complex Types -->
	<xs:complexType name="Body">
		<xs:sequence>
			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:anyAttribute namespace="##other" processContents="lax"/>
	</xs:complexType>
	<xs:complexType name="Header">
	
			<xs:element name="service" type="Service" minOccurs="0"/>
			<xs:element name="application" type="Application" minOccurs="0"/>
			<xs:element name="concept" type="Concept" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo source="Clever">BusinessRef as "@type = text()".</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Clever">BusinessRef</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="publishingBrand" type="Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For example: DS, BS, VA, JA.</xs:documentation>
					<xs:appinfo source="Clever">BusinessRef</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="salesBrand" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>For example: PP, PP Regie, Scripta, JobAt.</xs:documentation>
					<xs:appinfo source="Clever">BusinessRef</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="company" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For example: MH, EDA.</xs:documentation>
					<xs:appinfo source="Clever">BusinessRef</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="handling" minOccurs="0" type="Handling"/>
			<xs:element name="result" minOccurs="0" type="Result"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FileMessage">
		<xs:sequence>
			<xs:element name="fileInfo" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="fullName" type="xs:string" minOccurs="0"/>
						<xs:element name="fileName" type="xs:string" minOccurs="0"/>
						<xs:element name="location" type="xs:string" minOccurs="0"/>
						<xs:element name="fileDelimiter" type="xs:string" minOccurs="0"/>
						<xs:element name="fmsStreamFullName" type="xs:string" minOccurs="0"/>
						<xs:element name="fmsStreamFileName" type="xs:string" minOccurs="0"/>
						<xs:element name="fmsStreamLocation" type="xs:string" minOccurs="0"/>
						<xs:element name="fmsStreamDestinationLocation" type="xs:string" minOccurs="0"/>
						<xs:element name="configuredFileLocation" type="xs:string" minOccurs="0"/>
						<xs:element name="type" type="xs:string" minOccurs="0"/>
						<xs:element name="readProtected" type="xs:boolean" minOccurs="0"/>
						<xs:element name="writeProtected" type="xs:boolean" minOccurs="0"/>
						<xs:element name="size" type="xs:int" minOccurs="0"/>
						<xs:element name="lastModified" type="xs:dateTime" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="content" minOccurs="0">
				<xs:complexType>
					<xs:choice>
						<xs:element name="textContent" type="xs:string"/>

						<!-- FMSStream always sends and receives binary data -->
						<xs:element name="binaryContent" type="xs:base64Binary"/>
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="schemaVersion" type="xs:string" fixed="1.0.0" use="required"/>
	</xs:complexType>
	<xs:complexType name="Concept">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="type" type="Identifier" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="Application">
		<xs:sequence>
			<xs:element name="sender" type="Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Clever">BusinessRefs</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="receiver" type="Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Clever">BusinessRefs</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Service">
		<xs:sequence>
			<xs:element name="serviceName" type="Identifier">
				<xs:annotation>
					<xs:appinfo source="Clever">ServiceName</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceOperation" type="Identifier">
				<xs:annotation>
					<xs:appinfo source="Clever">BusinessOperation</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceVersion" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Clever">Service Version</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="parameters" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="parameter" type="Parameter" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Parameter">
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="Value" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
	
	<xs:complexType name="Result">
		<xs:sequence>
			<xs:element minOccurs="1" name="resultCode" type="xs:string"/>
			<xs:element minOccurs="0" name="resultDescription" type="xs:string"/>
			<xs:element minOccurs="1" name="isError" type="xs:boolean"/>
			<xs:element minOccurs="0" name="system" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	</xs:schema>